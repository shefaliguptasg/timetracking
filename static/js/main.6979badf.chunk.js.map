{"version":3,"sources":["redux/Reducer.js","Components/ExpenseItem.js","redux/Store.js","Components/Loginpage.js","App.js","reportWebVitals.js","index.js"],"names":["initiaState","count","counter","state","action","type","ExpenseItem","props","console","log","displayDate","date","toLocaleString","month","className","title","store","createStore","require","useState","App","item","Description","Date","map","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAKA,EAAa,CACdC,MAAQ,GAqBGC,EAlBC,WAAgC,IAA/BC,EAA8B,uDAAtBH,EAAaI,EAAS,uCAC/C,OAAOA,GAAUA,EAAOC,MAEpB,IAAK,oBACL,kCACOF,GADP,IAEIF,MAAME,EAAMF,MAAM,IAEtB,IAAK,mBACD,kCACOE,GADP,IAEIF,MAAME,EAAMF,MAAM,IAE1B,QACA,OAAOE,I,mBCAIG,MAdf,SAAqBC,GACnBC,QAAQC,IAAI,uBAAqBF,GACjC,IAAMG,EAAcH,EAAMI,KAAKC,eAAe,QAAS,CAAEC,MAAO,SAChE,OACE,sBAAKC,UAAU,WAAf,UACE,8BACE,8BAAMJ,MAER,qBAAKI,UAAU,eAAf,SACE,6BAAKP,EAAMQ,c,OCXNC,EAAQC,YAAYf,G,KCFZgB,EAAQ,GAArBC,SC+BOC,MAnBf,WACE,IAAMC,EAAO,CACX,CAAEN,MAAO,MAAOO,YAAa,SAAUX,KAAM,IAAIY,MACjD,CAAER,MAAO,OAAQO,YAAa,QAASX,KAAM,IAAIY,OAGnD,OACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,qBAAKF,UAAU,MAAf,SAEGO,EAAKG,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,CAAaV,MAAOU,EAAEV,MAAOJ,KAAMc,EAAEd,eCXhCe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6979badf.chunk.js","sourcesContent":["var  initiaState ={\r\n    count : 0\r\n}\r\n\r\nconst counter = (state = initiaState, action)=>{\r\nswitch(action && action.type)\r\n{\r\n    case \"INCEREASE_COUNTER\":\r\n    return{\r\n        ...state,\r\n        count:state.count+1\r\n    }\r\n    case \"DECREASE_COUNTER\":\r\n        return{\r\n            ...state,\r\n            count:state.count-1\r\n        }\r\n    default:\r\n    return state\r\n}\r\n}\r\n\r\nexport default counter","import React, { useState } from \"react\";\r\nimport \"./Styles/Expences.css\";\r\nimport \"./Styles/ExpencesItem.css\"\r\n\r\nfunction ExpenseItem(props) {\r\n  console.log(\"---------------->\", props);\r\n  const displayDate = props.date.toLocaleString(\"es-US\", { month: \"long\" });\r\n  return (\r\n    <div className=\"expenses\" >\r\n      <div>\r\n        <div>{displayDate}</div>\r\n      </div>\r\n      <div className=\"expense-item\">\r\n        <h1>{props.title}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import {createStore} from 'redux';\r\nimport counter from './Reducer';\r\nexport const store = createStore(counter)","const { useState } = require(\"react\");\r\n\r\nfunction Loginpage() {\r\n  const [pwd1, setPwd] = useState(\"\");\r\n  const [pwd2, setPwd2] = useState(\"\");\r\n  const [error, seteError] = useState(\"\");\r\n  const handlePasswordChange = (e) => {\r\n    if (e.target.value < \"\") {\r\n      seteError(\"password should not empty\");\r\n    } else if (e.target.value.length > 8) {\r\n      seteError(\"password length should not greater then 8\");\r\n    } else {\r\n        seteError(\"\");\r\n      setPwd(e.target.value);\r\n    }\r\n  };\r\n\r\n  const handleConfirmPasswordChange=(e)=>{\r\n    setPwd2(e.target.value)\r\n\r\n  }\r\n  const handleSumbit=()=>{\r\n      console.log(pwd1,pwd2)\r\n      if(pwd1!==pwd2)\r\n      {\r\n          seteError(\"Confirm  Password is not correct \")\r\n      }\r\n      else\r\n      {\r\n          alert(\"submitted successfully\")\r\n      }\r\n  }\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        onChange={handlePasswordChange}\r\n      ></input><br/>\r\n      <label style={{color:\"red\"}}>{error}</label>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        onChange={handleConfirmPasswordChange}\r\n      ></input>\r\n      <button onSubmit={handleSumbit}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loginpage","import \"./App.css\";\nimport Counter from \"./Components/Counter\";\nimport ExpenseItem from \"./Components/ExpenseItem\";\nimport counter from \"./redux/Reducer\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/Store\";\nimport InputText from \"./Components/InputText\";\nimport { useState } from \"react\";\nimport SquareConter from \"./Components/SquareNumber\";\nimport Loginpage from \"./Components/Loginpage\";\nimport AddComponent from \"./Components/AddComponent\";\n\nfunction App() {\n  const item = [\n    { title: \"Car\", Description: \"Suzuki\", date: new Date() },\n    { title: \"Bike\", Description: \"Honda\", date: new Date() },\n  ];\n  \n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n       {\n         item.map((i)=>(\n          <ExpenseItem title={i.title} date={i.date}></ExpenseItem>\n         ))\n       }\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}